package io.petermueller.petrinetz.controllers;

import io.petermueller.petrinetz.models.petrinet.*;
import io.petermueller.petrinetz.models.petrinet.PetriNetModel;
import io.petermueller.petrinetz.views.PetriNetView;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import org.graphstream.ui.view.ViewerPipe;

public class PetriNetController {
	private PetriNetModel petriNetModel;
	private PetriNetView petriNetView;
	
	public PetriNetController(PetriNetModel model, PetriNetView view) {
		this.petriNetModel = model;
		this.petriNetView = view;
		
		ViewerPipe viewerPipe = petriNetView.viewer.newViewerPipe();
		
		viewerPipe.addViewerListener(new ViewerListenerAdapter() {
			@Override
			public void buttonReleased(String id) {
				Location element = petriNetModel.getLocation(id);
				if (element.getClass() == Transition.class) {
					petriNetModel.fire((Transition) element);
				}
			}
		});
		
		petriNetView.view.addMouseListener(new MouseAdapter() {
			@Override
			public void mousePressed(MouseEvent me) {
				viewerPipe.pump();
			}

			@Override
			public void mouseReleased(MouseEvent me) {
				viewerPipe.pump();
			}
		});
		
		petriNetModel.addEventListener(new EventListener() {
			@Override
			public void event(Event eventType) {
				if (eventType == Event.PETRINET_UPDATED) {
					petriNetView.updatePetriNet(
						petriNetModel.transitions,
						petriNetModel.places);
				}
			}
		});
	}
}
