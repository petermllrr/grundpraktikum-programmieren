package io.petermueller.petrinetz.controllers;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.List;

import javax.swing.JFrame;
import io.petermueller.petrinetz.models.filesystem.FileSystemModel;
import io.petermueller.petrinetz.models.petrinet.*;
import io.petermueller.petrinetz.models.rgraph.RGraphModel;
import io.petermueller.petrinetz.util.Event;
import io.petermueller.petrinetz.util.EventListener;
import io.petermueller.petrinetz.views.MainFrameView;
import io.petermueller.petrinetz.views.PetriNetView;
import io.petermueller.petrinetz.views.RGraphView;
import io.petermueller.petrinetz.views.StatusBarView;
import io.petermueller.petrinetz.views.TextAreaView;
import io.petermueller.petrinetz.views.ToolbarView;
import io.petermueller.petrinetz.util.BatchProcessing;

public class MainFrameController {
	protected PetriNetController petriNetController;
	protected ToolbarController toolbarController;
	protected RGraphControllerGui rGraphController;
	private PetriNetModel petriNetModel;
	private FileSystemModel fileSystemModel;
	private RGraphModel rGraphModel;
	private MainFrameView mainFrameView;
	private TextAreaView textAreaView;
	
	public MainFrameController() {
		petriNetModel = new PetriNetModel();
		fileSystemModel = new FileSystemModel();
		rGraphModel = new RGraphModel();
		mainFrameView = new MainFrameView();
		
		mainFrameView.mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		initializeMenu();
		renderMainLayout();
	}
	
	private void initializeMenu() {
		mainFrameView.menuOpen.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				PetriNetModel loadedPetriNet = fileSystemModel.readNewFile(
						mainFrameView.mainFrame
				);
				if (loadedPetriNet != null) {
					petriNetModel.load(loadedPetriNet);
					fileSystemModel.notifyGui();
				}
			}
		});
		
		mainFrameView.menuBatchProcessing.addActionListener(
				new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				List<PetriNetModel> petriNets = fileSystemModel.readNewFiles(
						mainFrameView.mainFrame
				);
				BatchProcessing batch = new BatchProcessing(petriNets);
				textAreaView.printBatchResults(batch);
			}
		});
		
		mainFrameView.menuQuit.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			};
		});
		
		mainFrameView.menuInfo.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) { 
				new InfoDialogController(mainFrameView.mainFrame);
			}
		});
		
		mainFrameView.menuReload.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) { 
				File currentFile = fileSystemModel.getCurrentFile();
				petriNetModel.load(fileSystemModel.readNewFile(currentFile));
				fileSystemModel.notifyGui();
			}
		});
	}
	
	private void renderMainLayout() {
		textAreaView = new TextAreaView();
		StatusBarView statusBarView = new StatusBarView();
		PetriNetView petriNetView = new PetriNetView();
		ToolbarView toolbarView = new ToolbarView();
		RGraphView rGraphView = new RGraphView();
		
		petriNetController = new PetriNetController(
			petriNetModel,
			petriNetView
		);
		toolbarController = new ToolbarController(
			toolbarView,
			fileSystemModel,
			petriNetModel,
			rGraphModel,
			rGraphView,
			textAreaView,
			mainFrameView
		);
		rGraphController = new RGraphControllerGui(
			rGraphView,
			rGraphModel,
			fileSystemModel,
			petriNetModel,
			petriNetView
		);
		mainFrameView.renderMainLayout(
			toolbarView.toolbar,
			statusBarView.statusBar,
			textAreaView.textArea,
			petriNetView.panel,
			rGraphView.panel
		);
		
		fileSystemModel.addEventListener(new EventListener() {
			@Override
			public void event(Event eventType) {
				if (eventType == Event.FILESYSTEM_NEW_FILE_OPENED) {
					statusBarView.setText(fileSystemModel.getCurrentFileName());
					statusBarView.setEdited(false);
					mainFrameView.menuReload.setEnabled(true);
					petriNetView.renderPetriNet(
						petriNetModel.transitions,
						petriNetModel.places,
						petriNetModel.arcs
					);
					textAreaView.print(
						fileSystemModel.getCurrentFileName() + " opened."
					);
				}
			}
		});
		
		petriNetModel.addEventListener(new EventListener() {
			@Override
			public void event(Event eventType) {
				if (eventType == Event.PETRINET_MARKING_EDITED) {
					if (petriNetModel.fileChanged) {
						statusBarView.setEdited(true);
					}
				}
			}
		});
	}
}