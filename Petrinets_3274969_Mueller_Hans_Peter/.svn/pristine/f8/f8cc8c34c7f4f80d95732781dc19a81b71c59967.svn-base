package io.petermueller.petrinetz.controllers;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import org.graphstream.ui.view.ViewerPipe;

import io.petermueller.petrinetz.models.filesystem.FileSystemModel;
import io.petermueller.petrinetz.models.petrinet.PetriNetModel;
import io.petermueller.petrinetz.models.rgraph.Marking;
import io.petermueller.petrinetz.models.rgraph.RGraphModel;
import io.petermueller.petrinetz.util.Event;
import io.petermueller.petrinetz.util.EventListener;
import io.petermueller.petrinetz.util.ViewerListenerAdapter;
import io.petermueller.petrinetz.views.PetriNetView;
import io.petermueller.petrinetz.views.RGraphView;

public class RGraphControllerGui extends RGraphController {
	protected RGraphView rGraphView;
	
	public RGraphControllerGui(
			RGraphView rGraphView,
			RGraphModel rGraphModel,
			FileSystemModel fileSystemModel,
			PetriNetModel petriNetModel,
			PetriNetView petriNetView) {
		super(rGraphModel, petriNetModel);
		this.rGraphView = rGraphView;
		ViewerPipe viewerPipe = rGraphView.viewer.newViewerPipe();
		
		rGraphView.view.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseReleased(MouseEvent me) {
				viewerPipe.pump();
			}
		});
		
		viewerPipe.addViewerListener(new ViewerListenerAdapter() {
			@Override
			public void buttonReleased(String id) {
				Marking marking = rGraphModel.getMarkingById(id);
				
				if (marking.getClass() == Marking.class) {
					rGraphModel.goToMarking(marking.places);
					rGraphView.updateGraph(
						rGraphModel.markings,
						rGraphModel.arcs
					);
					petriNetModel.setToMarking(marking.places);
					petriNetView.updatePetriNet(
						petriNetModel.transitions,
						petriNetModel.places,
						petriNetModel.selectedPlace
					);
				}
			}
		});
			
		fileSystemModel.addEventListener(new EventListener() {
			@Override
			public void event(Event eventType) {
				if (eventType == Event.FILESYSTEM_NEW_FILE_OPENED) {
					rGraphModel.reset(petriNetModel.places);
					rGraphView.renderInitialRGraph(
							rGraphModel.markings,
							rGraphModel.arcs);
				}
			}
		});
		
		rGraphModel.addEventListener(new EventListener() {
			@Override
			public void event(Event eventType) {
				if (eventType == Event.RGRAPH_RESET) {
					rGraphView.renderInitialRGraph(
							rGraphModel.markings,
							rGraphModel.arcs);
				}
				if (eventType == Event.RGRAPH_GO_TO_MARKING) {
					rGraphView.updateGraph(
						rGraphModel.markings,
						rGraphModel.arcs);
				}
				if (eventType == Event.RGRAPH_NEW_GRAPH_LOADED) {
					rGraphView.renderInitialRGraph(
							rGraphModel.markings,
							rGraphModel.arcs);
				}
			}
		});
	}
	
	@Override
	protected void addPetriNetEventListener() {
		petriNetModel.addEventListener(new EventListener() {
			@Override
			public void event(Event eventType) {
				if (eventType == Event.PETRINET_TRANSITION_FIRED) {
					rGraphModel.addTransition(
						petriNetModel.places,
						petriNetModel.lastTransition);
					rGraphView.updateGraph(
						rGraphModel.markings,
						rGraphModel.arcs);
				}
				if (eventType == Event.PETRINET_MARKING_EDITED) {
					rGraphModel.reset(petriNetModel.places);
					rGraphView.renderInitialRGraph(
							rGraphModel.markings,
							rGraphModel.arcs);
				}
				if (eventType == Event.PETRINET_MARKING_RESET) {
					rGraphModel.goToMarking(petriNetModel.places);
				}
			}
		});
	}
}
