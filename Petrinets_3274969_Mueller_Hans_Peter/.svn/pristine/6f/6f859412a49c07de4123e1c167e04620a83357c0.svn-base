package io.petermueller.petrinetz.controllers;

import io.petermueller.petrinetz.models.petrinet.*;
import io.petermueller.petrinetz.models.petrinet.PetriNetModel;
import io.petermueller.petrinetz.util.Event;
import io.petermueller.petrinetz.util.EventListener;
import io.petermueller.petrinetz.util.ViewerListenerAdapter;
import io.petermueller.petrinetz.views.PetriNetView;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;


import org.graphstream.ui.view.ViewerPipe;

public class PetriNetController {
	public PetriNetController(
		PetriNetModel petriNetModel,
		PetriNetView petriNetView) {
		ViewerPipe viewerPipe = petriNetView.viewer.newViewerPipe();
		
		petriNetView.view.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseReleased(MouseEvent me) {
				viewerPipe.pump();
			}
		});
		
		viewerPipe.addViewerListener(new ViewerListenerAdapter() {
			@Override
			public void buttonReleased(String id) {
				Location element = petriNetModel.getLocation(id);
				
				if (element.getClass() == Transition.class) {
					petriNetModel.setNoActivePlace();
					petriNetModel.fire((Transition) element);
				} else if (element.getClass() == Place.class) {
					petriNetModel.setActivePlace(id);
					petriNetView.updatetSelectedPlace(
						petriNetModel.places,
						petriNetModel.selectedPlace);
				}
			}
		});
			
		petriNetModel.addEventListener(new EventListener() {
			@Override
			public void event(Event eventType) {
				if (eventType == Event.PETRINET_TRANSITION_FIRED ||
					eventType == Event.PETRINET_MARKING_RESET ||
					eventType == Event.PETRINET_MARKING_EDITED) {
					petriNetView.updatePetriNet(
						petriNetModel.transitions,
						petriNetModel.places,
						petriNetModel.selectedPlace);
				}
				if (eventType == Event.PETRINET_NEW_NET_LOADED) {
					petriNetView.renderPetriNet(
						petriNetModel.transitions,
						petriNetModel.places,
						petriNetModel.arcs
					);
				}
			}
		});
	}
}
